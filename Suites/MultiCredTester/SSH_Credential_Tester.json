{
    "scheduleOption": 0,
    "metadata": {
        "currentUuid": "PeHlAlCiQXSXjxZCO4wS2A",
        "originalUuid": "PeHlAlCiQXSXjxZCO4wS2A",
        "authorCompanyUuid": "9ca9a93f-9af6-4379-b2fe-c626d08a7486",
        "registryVersion": "1.0.0",
        "checksum": "68c77c3897edf2a713034c12c3d5a143"
    },
    "dataType": 0,
    "description": "",
    "appliesTo": "lm_cred_tester.ssh.pass",
    "technology": "",
    "type": 5,
    "params": [
        {
            "name": "linuxcmdline",
            "comment": "",
            "value": ""
        },
        {
            "name": "linuxscript",
            "comment": "",
            "value": ""
        },
        {
            "name": "scriptgroovy",
            "comment": "",
            "value": "// import the logicmonitor expect helper class\nimport com.santaba.agent.groovyapi.expect.Expect;\nimport com.santaba.agent.groovyapi.snmp.Snmp\nimport groovy.json.JsonSlurper\nimport java.time.LocalDateTime\nimport org.xbill.DNS.*;\n\n//get SSH creds from //expected output from property lm_cred_tester.ssh.pass\n//expected output from property\n//[{\"name\":\"logicm\",\"sshuser\": \"logicm\",\"sshpass\": \"123456\"}, {\"name\":\"cred2\",\"sshuser\":\"789456\",\"sshpass\":\"789456\"}]}]\ndef credentials = hostProps.get(\"lm_cred_tester.ssh.pass\");\n\ndef hostName = hostProps.get(\"system.hostname\");\ndef already_has_match = hostProps.get(\"lm_cred_tester.ssh.match\")\n\ndef credentials_json = new JsonSlurper().parseText(credentials)\ndef prompt = '[\\\\(a-zA-Z0-9\\\\-\\\\_\\\\.\\\\/\\\\)\\\\>\\\\s~#:]'\ndef currentTime = LocalDateTime.now()\n\nif (already_has_match == \"False\" || already_has_match == null) {\n\tfor (cred in credentials_json) {\n\t\ttry {\n\t\t\t// open an ssh connection and wait for the prompt\n\t\t\tssh_connection = Expect.open(hostName, cred.sshuser, cred.sshpass, 30);\n\t\t\t\n\t\t\tssh_connection.expect(prompt)\n\n\t\t\t// logout from the device\n\t\t\tssh_connection.send(\"exit\\n\")\n\t\t\t\n\t\t\t// return with a response code that indicates we ran successfully\n\t\t\tprintln 'lm_cred_tester.ssh.name=' + cred.name\n\t\t\tprintln \"lm_cred_tester.ssh.match=True\"\n\t\t\tprintln \"lm_cred_tester.ssh.lastrun=${currentTime}\"\n\t\t}catch(all) {\n\t\t\tprintln \"lm_cred_tester.ssh.match=False\"\n\t\t\tprintln \"lm_cred_tester.ssh.lastrun=${currentTime}\"\n\t\t}\n\t}\n}\n\nreturn(0);"
        },
        {
            "name": "scripttype",
            "comment": "embed",
            "value": "embed"
        },
        {
            "name": "windowscmdline",
            "comment": "",
            "value": ""
        },
        {
            "name": "windowsscript",
            "comment": "",
            "value": ""
        }
    ],
    "version": 1663008059,
    "tags": "",
    "auditVersion": 0,
    "name": "SSH Credential Tester",
    "id": 254,
    "group": "LMPS"
}